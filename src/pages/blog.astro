---
import { getCollection } from 'astro:content'
import BaseLayout from '../layouts/BaseLayout.astro'
import CardSection from '../components/general/CardSection.astro'
import PostCard from '../components/cards/PostCard.astro'
import NoteCard from '../components/cards/NoteCard.astro'
import { slugify } from '../utils/slugs'
import type { Author } from '../content/config'

const posts = (await getCollection('posts'))
  .map(post => ({
    slug: post.slug,
    title: post.data.title,
    icon: post.data.icon,
    date: post.data.date,
    tags: post.data.tags,
  }))
  .sort((post1, post2) => {
    if (post1.date > post2.date) return -1
    if (post1.date < post2.date) return +1
    return 0
  })

const selectedAuthors = (await getCollection('categories')).find(category => category.id === 'authors')!.data as Author[]

const notes = (await getCollection('notes'))
  .map(note => ({
    slug: note.slug,
    title: note.data.title,
    author: note.data.author,
    date: note.data.date,
  }))
  .sort((note1, note2) => {
    const date1 = note1.date instanceof Date ? note1.date : new Date(note1.date, 0)
    const date2 = note2.date instanceof Date ? note2.date : new Date(note2.date, 0)
    if (date1 < date2) return -1
    if (date1 > date2) return +1
    if (slugify(note1.title) < slugify(note2.title)) return -1
    if (slugify(note1.title) > slugify(note2.title)) return +1
    return 0
  })

const authors = [...new Set(notes.map(note => note.author.split(' & ')).flat())]
authors.sort((author1, author2) => {
  let id1 = selectedAuthors.indexOf(author1)
  id1 = id1 === -1 ? 1e9 : id1
  let id2 = selectedAuthors.indexOf(author2)
  id2 = id2 === -1 ? 1e9 : id2
  return id1 - id2
})
---

<BaseLayout title="Blog">
  <h1 class="mb-12 text-5xl font-bold">Blog</h1>
  <CardSection title="📰 Însemnări">
    <section class="my-8 flex flex-col gap-4">
      {posts.map(post => <PostCard slug={post.slug} title={post.title} icon={post.icon} date={post.date} />)}
    </section>
  </CardSection>
  <CardSection title="🏛️ Conspecte">
    <section class="my-8 flex flex-col gap-8">
      {
        authors.map(author => (
          <article class="flex items-start gap-6 max-md:flex-col">
            <img class="h-20 grayscale" src={`/author/${slugify(author)}.webp`} alt={author} transition:name={author + '-icon'} />
            <div class="flex w-full flex-col gap-4">
              <h3 class="text-2xl font-bold" transition:name={author + '-author'}>
                {author}
              </h3>
              {notes
                .filter(note => note.author.split(' & ')[0] === author)
                .map(note => (
                  <NoteCard slug={note.slug} title={note.title} date={note.date} />
                ))}
            </div>
          </article>
        ))
      }
    </section>
  </CardSection>
</BaseLayout>
